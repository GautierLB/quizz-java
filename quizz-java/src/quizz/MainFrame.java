/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package quizz;

import java.awt.BorderLayout;
import javax.swing.JOptionPane;

/**
 *
 * @author Gautier
 */
public class MainFrame extends javax.swing.JFrame {

    public enum View {

        MainScreenView, CreateQuizzView, ThemeScreenView
    };

    public MainFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getAccessibleContext().setAccessibleName("mainFrame");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });

    }

    /**
     * Permet de choisir la vue a afficher.
     *
     * @param viewName est une enumeration contenant le nom des vues.
     */
    public void changeView(View viewName) {
        this.getContentPane().removeAll();
        switch (viewName) {
            case MainScreenView:
                this.displayMainScreen();
                break;
            case CreateQuizzView:
                this.displayCreateQuizz();
                break;
            case ThemeScreenView:
                this.displayThemeScreen();
                break;
        }
        this.setVisible(true);
    }

    private void displayCreateQuizz() {
        CreateQuizzView createQuizz = new CreateQuizzView(this);
        this.setLayout(new BorderLayout());
        this.add(BorderLayout.CENTER, createQuizz);
    }

    /**
     * Permet d'afficher la vue MainScreen.
     */
    private void displayMainScreen() {
        MainScreenView mainScreen = new MainScreenView(this);
        this.setLayout(new BorderLayout());
        this.add(BorderLayout.CENTER, mainScreen);
    }

    /**
     * Permet d'afficher la vue ThemeScreen.
     */
    private void displayThemeScreen() {
        ThemeScreenView themeScreen = new ThemeScreenView(this);
        this.setLayout(new BorderLayout());
        this.add(BorderLayout.CENTER, themeScreen);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
